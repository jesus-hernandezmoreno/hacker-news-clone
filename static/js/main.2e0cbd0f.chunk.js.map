{"version":3,"sources":["api/config.ts","views/Home/Header/styled.tsx","views/Home/Header/index.tsx","components/Comments/Comment/styled.tsx","utils/index.tsx","components/Comments/Comment/index.tsx","api/stories.ts","components/Comments/styled.tsx","components/Comments/index.tsx","components/Story/styled.tsx","components/Story/index.tsx","views/Home/styled.tsx","views/Home/index.tsx","hooks/useInfiniteScroll.tsx","serviceWorker.ts","index.tsx"],"names":["API","axios","create","baseURL","headers","Container","styled","div","Content","Logo","img","Header","src","alt","motion","Information","Details","Detail","Icon","i","Text","p","CommentBody","getTime","timestamp","seconds","Math","floor","Date","interval","initialComment","by","id","kids","parent","text","time","type","Comment","useState","comment","setComment","useEffect","commentId","method","url","params","print","then","data","catch","error","console","log","className","Comments","comments","Story","map","key","Activity","Points","TotalComments","Count","h1","Sub","h2","Title","a","CommentsContainer","initialStory","descendants","score","title","variants","open","opacity","height","collapsed","when","expanded","setExpanded","story","setStory","isOpen","storyId","initial","onClick","href","target","animate","exit","Home","count","loading","setLoading","setCount","handleScroll","window","innerHeight","document","documentElement","scrollTop","offsetHeight","addEventListener","removeEventListener","useInfiniteScroll","storyIds","setStoryIds","getStories","slice","Boolean","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.2e0cbd0f.chunk.js","sourcesContent":["import axios from \"axios\";\n\nconst baseURL = \"https://hacker-news.firebaseio.com/v0\";\n\nconst API = axios.create({\n  baseURL,\n  headers: {\n    \"Content-Type\": \"application/json\",\n  },\n});\n\nexport default API;\n","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n  /* Display & Box Model */\n  display: flex;\n  /* Styling */\n  color: #fff;\n  background: #ff6600;\n`;\n\nexport const Content = styled.div`\n  /* Display & Box Model */\n  display: flex;\n  margin: 0 auto;\n  align-items: center;\n  min-width: 1280px;\n  max-width: 1280px;\n  padding: 2rem;\n  /* Text */\n  font-size: 2.5rem;\n`;\n\nexport const Logo = styled.img`\n  /* Display & Box Model */\n  width: 4rem;\n  margin-right: 2rem;\n  /* Styling */\n  border: 2px solid #fff;\n`;\n","import React from \"react\";\n/* Styled */\nimport { Container, Content, Logo } from \"./styled\";\n\nconst Header: React.FC = () => {\n  return (\n    <Container>\n      <Content>\n        <Logo\n          src=\"https://news.ycombinator.com/favicon.ico\"\n          alt=\"Hacker News Clone\"\n        />\n        Hacker News Clone\n      </Content>\n    </Container>\n  );\n};\n\nexport default Header;\n","import styled from \"styled-components\";\nimport { motion } from \"framer-motion\";\n\nexport const Container = styled(motion.div)`\n  /* Display & Box Model */\n  padding: 1.5rem;\n`;\nexport const Information = styled(motion.div)`\n  /* Display & Box Model */\n  display: flex;\n  flex-flow: column;\n`;\n\nexport const Details = styled(motion.div)`\n  /* Display & Box Model */\n  display: flex;\n  margin-bottom: 1rem;\n`;\n\nexport const Detail = styled(motion.div)`\n  /* Display & Box Model */\n  display: flex;\n  margin-right: 1.5rem;\n`;\n\nexport const Icon = styled(motion.i)`\n  /* Display & Box Model */\n  font-size: 1.5rem;\n  margin-right: 1rem;\n  /* Styling */\n  color: grey;\n`;\n\nexport const Text = styled(motion.p)`\n  /* Styling*/\n  color: grey;\n  /* Text */\n  font-size: 1.5rem;\n`;\n\nexport const CommentBody = styled(motion.p)`\n  /* Styling*/\n  color: grey;\n  /* Text */\n  font-size: 1.4rem;\n`;\n","export const getTime = (timestamp: any) => {\n  const seconds = Math.floor((new Date().getTime() - timestamp * 1000) / 1000);\n\n  let interval = Math.floor(seconds / 31536000);\n\n  if (interval > 1) {\n    return `${interval} years`;\n  }\n  interval = Math.floor(seconds / 2592000);\n\n  if (interval > 1) {\n    return `${interval} months`;\n  }\n  interval = Math.floor(seconds / 86400);\n\n  if (interval > 1) {\n    return `${interval} days`;\n  }\n  interval = Math.floor(seconds / 3600);\n\n  if (interval > 1) {\n    return `${interval} hours`;\n  }\n  interval = Math.floor(seconds / 60);\n\n  if (interval > 1) {\n    return `${interval} minutes`;\n  }\n\n  return `${Math.floor(seconds)} seconds`;\n};\n","import React, { useState, useEffect } from \"react\";\n/* API */\nimport { getCommentById } from \"api/stories\";\n/* Comments */\nimport Comments from \"components/Comments\";\n/* Styled */\nimport {\n  Container,\n  Information,\n  Details,\n  Detail,\n  Icon,\n  Text,\n  CommentBody,\n} from \"./styled\";\n/* Utils */\nimport { getTime } from \"utils\";\n\ninterface Props {\n  id: number;\n}\n\ninterface Comment {\n  by: string;\n  id: number;\n  kids: number[];\n  parent: number;\n  text: string;\n  time: number;\n  type: string;\n}\n\nconst initialComment = {\n  by: \"\",\n  id: 0,\n  kids: [],\n  parent: 0,\n  text: \"\",\n  time: 0,\n  type: \"\",\n};\n\nconst Comment: React.FC<Props> = ({ id }) => {\n  const [comment, setComment] = useState<Comment>(initialComment);\n  useEffect(() => {\n    getCommentById(id)\n      .then(({ data }: { data: Comment }) => setComment(data))\n      .catch((error: any) => console.log(error));\n  }, [id]);\n  return (\n    <Container>\n      <Information>\n        <Details>\n          <Detail>\n            <Icon className=\"fas fa-user\" />\n            <Text>{comment.by || \"Anonymous\"}</Text>\n          </Detail>\n          <Detail>\n            <Icon className=\"fas fa-clock\" />\n            <Text>{getTime(comment.time)}</Text>\n          </Detail>\n        </Details>\n      </Information>\n      <CommentBody>{comment.text}</CommentBody>\n      {comment.kids && <Comments comments={comment.kids} />}\n    </Container>\n  );\n};\n\nexport default Comment;\n","/*\n--------------------------------------------------------------------------\n Stories\n--------------------------------------------------------------------------\n*/\n\nimport API from \"./config\";\n\nexport function getStories(type: string = \"top\") {\n  return API({\n    method: \"get\",\n    url: `/${type}stories.json`,\n    params: {\n      print: \"pretty\",\n    },\n  });\n}\n\nexport function getStoryById(storyId: string) {\n  return API({\n    method: \"get\",\n    url: `/item/${storyId}.json`,\n    params: {\n      print: \"pretty\",\n    },\n  });\n}\n\nexport function getCommentById(commentId: number) {\n  return API({\n    method: \"get\",\n    url: `/item/${commentId}.json`,\n    params: {\n      print: \"pretty\",\n    },\n  });\n}\n","import styled from \"styled-components\";\nimport { motion } from \"framer-motion\";\n\nexport const Container = styled(motion.div)`\n  /* Display & Box Model */\n`;\n","import React from \"react\";\n/* Components */\nimport Comment from \"./Comment\";\n/* Styled */\nimport { Container } from \"./styled\";\n\ninterface Props {\n  comments: number[];\n}\n\nconst Story: React.FC<Props> = ({ comments }) => {\n  return (\n    <Container>\n      {comments.map((id) => (\n        <Comment key={id} id={id} />\n      ))}\n    </Container>\n  );\n};\n\nexport default Story;\n","import styled from \"styled-components\";\nimport { motion } from \"framer-motion\";\n\nexport const Container = styled(motion.div)`\n  /* Display & Box Model */\n  width: 100%;\n  display: flex;\n  flex-flow: column;\n  padding: 1rem;\n  margin-bottom: 1rem;\n  /* Styling */\n  background: #fff;\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.12), 0 1px 2px rgba(0, 0, 0, 0.24);\n  transition: all 0.5s cubic-bezier(0.25, 0.8, 0.25, 1);\n  /* Other */\n  cursor: pointer;\n  &:hover {\n    box-shadow: 0 7px 14px rgba(0, 0, 0, 0.25), 0 5px 5px rgba(0, 0, 0, 0.22);\n    transform: scale(1.01);\n  }\n`;\n\nexport const Content = styled(motion.div)`\n  /* Display & Box Model */\n  width: 100%;\n  display: flex;\n`;\n\nexport const Activity = styled(motion.div)`\n  /* Display & Box Model */\n  display: flex;\n  margin-right: 2rem;\n  /* Styling */\n  border-right: 2px solid grey;\n`;\n\nexport const Information = styled(motion.div)`\n  /* Display & Box Model */\n  display: flex;\n  flex-flow: column;\n`;\n\nexport const Details = styled(motion.div)`\n  /* Display & Box Model */\n  display: flex;\n  margin-top: 1.5rem;\n  margin-bottom: 1rem;\n`;\n\nexport const Detail = styled(motion.div)`\n  /* Display & Box Model */\n  display: flex;\n  margin-right: 1.5rem;\n`;\n\nexport const Icon = styled(motion.i)`\n  /* Display & Box Model */\n  font-size: 1.5rem;\n  margin-right: 1rem;\n  /* Styling */\n  color: grey;\n`;\n\nexport const Text = styled(motion.p)`\n  /* Styling*/\n  color: grey;\n  /* Text */\n  font-size: 1.5rem;\n`;\n\nexport const Points = styled(motion.div)`\n  /* Display & Box Model */\n  display: flex;\n  flex-flow: column;\n  justify-content: center;\n  align-items: center;\n  margin-right: 1.5rem;\n`;\n\nexport const TotalComments = styled(motion.div)`\n  /* Display & Box Model */\n  display: flex;\n  flex-flow: column;\n  justify-content: center;\n  align-items: center;\n  margin-right: 1.5rem;\n`;\n\nexport const Count = styled(motion.h1)`\n  /* Style */\n  color: #fb651c;\n  /* Text */\n  font-size: 2.5rem;\n`;\n\nexport const Sub = styled(motion.h2)`\n  /* Style */\n  color: #504f4f;\n  /* Text */\n  font-size: 1.5rem;\n  text-transform: uppercase;\n`;\n\nexport const Title = styled(motion.a)`\n  /* Style */\n  color: #504f4f;\n  text-decoration: none;\n  /* Text */\n  font-size: 2.5rem;\n  font-weight: bold;\n`;\n\nexport const CommentsContainer = styled(motion.div)`\n  /* Display & Box Model */\n  max-height: 50rem;\n  overflow: scroll;\n`;\n","import React, { useState, useEffect } from \"react\";\nimport { AnimatePresence } from \"framer-motion\";\n/* API */\nimport { getStoryById } from \"api/stories\";\n/* Comments */\nimport Comments from \"components/Comments\";\n/* Styled */\nimport {\n  Container,\n  Content,\n  Activity,\n  Information,\n  Points,\n  Count,\n  Sub,\n  TotalComments,\n  CommentsContainer,\n  Title,\n  Details,\n  Detail,\n  Icon,\n  Text,\n} from \"./styled\";\n/* Utils */\nimport { getTime } from \"utils\";\n\ninterface Props {\n  id: string;\n  expanded: any;\n  setExpanded: (isOpen: any) => void;\n}\n\ninterface Story {\n  by: string;\n  descendants: number;\n  id: number;\n  kids: number[];\n  score: number;\n  time: number;\n  title: string;\n  type: string;\n  url: string;\n}\n\nconst initialStory = {\n  by: \"\",\n  descendants: 0,\n  id: 0,\n  kids: [],\n  score: 0,\n  time: 0,\n  title: \"\",\n  type: \"\",\n  url: \"\",\n};\n\nconst variants = {\n  open: { opacity: 1, height: \"auto\" },\n  collapsed: { opacity: 0, height: 0, when: \"afterChildren\" },\n};\n\nconst Story: React.FC<Props> = ({ id, expanded, setExpanded }) => {\n  const [story, setStory] = useState<Story>(initialStory);\n  const isOpen = id === expanded;\n\n  useEffect(() => {\n    getStoryById(id)\n      .then(({ data }: { data: Story }) => setStory(data))\n      .catch((error: any) => console.log(error));\n  }, [id]);\n\n  return (\n    <Container initial={false} onClick={() => setExpanded(isOpen ? false : id)}>\n      <Content>\n        <Activity>\n          <Points>\n            <Count>{story.score}</Count>\n            <Sub>Points</Sub>\n          </Points>\n          <TotalComments>\n            <Count>{story.descendants}</Count>\n            <Sub>Comments</Sub>\n          </TotalComments>\n        </Activity>\n        <Information>\n          <Title href={story.url} target=\"_blank\">\n            {story.title}\n          </Title>\n          <Details>\n            <Detail>\n              <Icon className=\"fas fa-user\" />\n              <Text>{story.by}</Text>\n            </Detail>\n            <Detail>\n              <Icon className=\"fas fa-clock\" />\n              <Text>{getTime(story.time)}</Text>\n            </Detail>\n          </Details>\n        </Information>\n      </Content>\n\n      <AnimatePresence initial={false}>\n        {isOpen && (\n          <CommentsContainer\n            key=\"content\"\n            initial=\"collapsed\"\n            animate=\"open\"\n            exit=\"collapsed\"\n            variants={variants}\n          >\n            {story.kids && <Comments comments={story.kids} />}\n          </CommentsContainer>\n        )}\n      </AnimatePresence>\n    </Container>\n  );\n};\n\nexport default Story;\n","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n  /* Display & Box Model */\n  min-height: 100vh;\n  display: flex;\n  flex-flow: column;\n  /* Styling */\n  background: #f8fafb;\n`;\n\nexport const Content = styled.div`\n  /* Display & Box Model */\n  display: flex;\n  flex-flow: column;\n  max-width: 1280px;\n  margin: 0 auto;\n  padding: 2rem;\n  /* Text */\n  font-size: 2.5rem;\n`;\n","import React, { useState, useEffect } from \"react\";\n/* API */\nimport { getStories } from \"api/stories\";\n/* Components */\nimport Header from \"./Header\";\nimport Story from \"components/Story\";\n/* Hooks */\nimport { useInfiniteScroll } from \"hooks/useInfiniteScroll\";\n/* Styled */\nimport { Container, Content } from \"./styled\";\n\nconst Home: React.FC = () => {\n  const { count } = useInfiniteScroll();\n  const [storyIds, setStoryIds] = useState<string[]>([]);\n  const [expanded, setExpanded] = useState<false | number>(0);\n\n  useEffect(() => {\n    getStories()\n      .then(({ data }: { data: string[] }) => setStoryIds(data))\n      .catch((error: any) => console.log(error));\n  }, []);\n\n  return (\n    <Container>\n      <Header />\n      <Content>\n        {storyIds.slice(0, count).map((id) => (\n          <Story\n            key={id}\n            id={id}\n            expanded={expanded}\n            setExpanded={setExpanded}\n          />\n        ))}\n      </Content>\n    </Container>\n  );\n};\n\nexport default Home;\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport { useState, useEffect } from \"react\";\n\nconst MAX_STORIES = 500;\nconst STORY_INCREMENT = 30;\nconst SCROLL_OFFSET = 100;\n\nexport const useInfiniteScroll = () => {\n  const [loading, setLoading] = useState(false);\n  const [count, setCount] = useState(STORY_INCREMENT);\n\n  const handleScroll = () => {\n    if (\n      window.innerHeight + document.documentElement.scrollTop <\n        document.documentElement.offsetHeight - SCROLL_OFFSET ||\n      loading\n    ) {\n      return false;\n    }\n\n    setLoading(true);\n  };\n\n  useEffect(() => {\n    if (!loading) return;\n\n    if (count + STORY_INCREMENT >= MAX_STORIES) {\n      setCount(MAX_STORIES);\n    } else {\n      setCount(count + STORY_INCREMENT);\n    }\n\n    setLoading(false);\n  }, [loading]);\n\n  useEffect(() => {\n    window.addEventListener(\"scroll\", handleScroll);\n    return () => window.removeEventListener(\"scroll\", handleScroll);\n  }, []);\n\n  return { count };\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Home from \"./views/Home\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"./scss/index.scss\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Home />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}